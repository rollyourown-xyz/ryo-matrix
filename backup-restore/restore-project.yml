---
# SPDX-FileCopyrightText: 2022 Wilfred Nicoll <xyzroller@rollyourown.xyz>
# SPDX-License-Identifier: GPL-3.0-or-later

- name: Restore persistent storage from a backup for {{ project_id }} containers on {{ host_id }}
  hosts: host_wireguard_ip
  
  vars_files:
    # Control node configuration
    - "{{ playbook_dir }}/../../ryo-control-node/configuration/configuration.yml"
    # Host configuration
    - "{{ playbook_dir }}/../../ryo-host/configuration/configuration_{{ host_id }}.yml"
    # Project configuration
    - "{{ playbook_dir }}/../configuration/configuration_{{ host_id }}.yml"

  vars:
    ansible_port: "{{ host_new_ssh_port }}"
    ansible_user: "{{ host_non_root_user }}"
    ansible_ssh_pass: "{{ host_non_root_user_password }}"
    ansible_ssh_private_key_file: "{{ local_non_root_user_ssh_private_key_file_path }}"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    ansible_become: yes
    ansible_become_method: sudo
    transfer_method: scp  
  
  tasks:

    - name: Remove persistent storage for {{ project_id }} containers on {{ host_id }}
      file:
        path: "/var/containers/{{ project_id }}"
        state: absent

    - name: Ensure the tmp directory is present on the remote host
      file:
        path: "/backup/tmp"
        state: directory

    - name: Ensure the tmp directory is present on the control node
      delegate_to: localhost
      become: yes
      become_user: "{{ local_non_root_user }}"
      file:
        path: "{{ playbook_dir }}/../../ryo-host/backup-restore/backups/tmp"
        state: directory

    - name: Copy the selected archive file to the tmp directory on the control node
      delegate_to: localhost
      become: yes
      become_user: "{{ local_non_root_user }}"
      copy:
        src: "{{ playbook_dir }}/../../ryo-host/backup-restore/backups/backup-{{ host_id }}-{{ project_id }}-{{ backup_stamp }}.tar.gz"
        dest: "{{ playbook_dir }}/../../ryo-host/backup-restore/backups/tmp/backup-{{ host_id }}-{{ project_id }}-{{ backup_stamp }}.tar.gz"

    - name: Copy (sync) persistent storage archive for {{ project_id }} containers from control node to {{ host_id }}
      synchronize:
        mode: push
        src: "{{ playbook_dir }}/../../ryo-host/backup-restore/backups/tmp/"
        dest: "/backup/tmp/"
        dest_port: "{{ host_new_ssh_port | int }}"
        set_remote_user: no
        delete: no

    - name: Unarchive persistent storage backup for {{ project_id }} containers on {{ host_id }}
      unarchive:
        src: "/backup/tmp/backup-{{ host_id }}-{{ project_id }}-{{ backup_stamp }}.tar.gz"
        dest: "/var/containers"
        extra_opts:
        - --same-owner
        - -p
        remote_src: yes

    - name: Remove the tmp directory on the control node
      delegate_to: localhost
      become: yes
      become_user: "{{ local_non_root_user }}"
      file:
        path: "{{ playbook_dir }}/../../ryo-host/backup-restore/backups/tmp"
        state: absent

    - name: Remove the tmp directory on the remote host
      file:
        path: "/backup/tmp"
        state: absent
