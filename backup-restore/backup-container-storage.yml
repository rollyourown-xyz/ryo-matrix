---
- name: Back up persistent storage for {{ project_id }} containers on {{ host_id }}
  hosts: host_wireguard_ip
  
  vars_files:
    # Control node configuration
    - "{{ playbook_dir }}/../../ryo-control-node/configuration/configuration.yml"
    # Host configuration
    - "{{ playbook_dir }}/../../ryo-host/configuration/configuration_{{ host_id }}.yml"
    # Project configuration
    - "{{ playbook_dir }}/../configuration/configuration_{{ host_id }}.yml"

  vars:
    ansible_port: "{{ host_new_ssh_port }}"
    ansible_user: "{{ host_non_root_user }}"
    ansible_ssh_pass: "{{ host_non_root_user_password }}"
    ansible_ssh_private_key_file: "{{ local_non_root_user_ssh_private_key_file_path }}"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    ansible_become: yes
    ansible_become_method: sudo
    transfer_method: scp  
  
  tasks:

    - name: Archive persistent storage for {{ project_id }} containers on {{ host_id }}
      archive:
        path: "/var/containers/{{ project_id }}"
        dest: "/tmp/backup-{{ host_id }}-{{ project_id }}-{{ ansible_date_time['date'] }}-{{ ansible_date_time['hour'] }}{{ ansible_date_time['minute'] }}{{ ansible_date_time['second'] }}.zip"
        remove: no
        format: zip
        force_archive: yes

    - name: Copy persistent storage archive for {{ project_id }} containers from {{ host_id }} to control node
      fetch:
        src: "/tmp/backup-{{ host_id }}-{{ project_id }}-{{ ansible_date_time['date'] }}-{{ ansible_date_time['hour'] }}{{ ansible_date_time['minute'] }}{{ ansible_date_time['second'] }}.zip"
        dest: "{{ playbook_dir }}/backups/"
        flat: yes

    - name: Remove backup file on {{ host_id }}
      file:
        path: "/tmp/backup-{{ host_id }}-{{ project_id }}-{{ ansible_date_time['date'] }}-{{ ansible_date_time['hour'] }}{{ ansible_date_time['minute'] }}{{ ansible_date_time['second'] }}.zip"
        state: absent
